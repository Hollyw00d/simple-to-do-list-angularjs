!function(t){function e(n){if(o[n])return o[n].exports;var i=o[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var o={};e.m=t,e.c=o,e.d=function(t,o,n){e.o(t,o)||Object.defineProperty(t,o,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=o(1),i=o(2),r=angular.module("app",[]);r.directive("todo",n.a),r.service("addItemService",i.a),r.controller("ListController",["addItemService",function(t){console.log("Blah!"),this.todoList=[],this.newTodo="",this.addItem=function(){this.todoList.push({title:this.newTodo,completed:!1}),this.newTodo=""},this.updateItem=function(t,e){this.todoList[e].title=t.title},this.getRemaining=function(){return this.todoList.filter(function(t){return t.completed})},this.deleteCompletedItems=function(){this.todoList=this.todoList.filter(function(t){return!t.completed})}}])},function(t,e,o){"use strict";function n(){return{restrict:"E",controller:"ListController as list",scope:{},templateUrl:"html/todo.html"}}e.a=n},function(t,e,o){"use strict";function n(){this.addItem=function(t,e){t.push({title:this.myNewTodo,completed:!1})}}e.a=n}]);